name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: '1.0.0'

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build-windows:
    name: Build Windows MSIX
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore .NET workloads
      run: dotnet workload restore
    
    - name: Install MAUI Workload
      run: dotnet workload install maui
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build Windows App
      run: dotnet publish NdcApp/NdcApp.csproj -f net8.0-windows10.0.19041.0 -c Release -p:BuildingForRelease=true -p:PublishProfile=MSIX -p:GenerateAppxPackageOnBuild=true -p:AppxPackageSigningEnabled=false
    
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-msix
        path: NdcApp/bin/Release/net8.0-windows10.0.19041.0/win10-x64/AppPackages/**/*.msix

  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore .NET workloads
      run: dotnet workload restore
    
    - name: Install MAUI Workload
      run: dotnet workload install maui
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build Android App
      run: dotnet publish NdcApp/NdcApp.csproj -f net8.0-android -c Release -p:BuildingForRelease=true -p:AndroidPackageFormat=apk
    
    - name: Upload Android artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: NdcApp/bin/Release/net8.0-android/publish/*.apk

  build-ios:
    name: Build iOS App
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore .NET workloads
      run: dotnet workload restore
    
    - name: Install MAUI Workload
      run: dotnet workload install maui
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build iOS App
      run: dotnet build NdcApp/NdcApp.csproj -f net8.0-ios -c Release -p:BuildingForRelease=true
    
    - name: Upload iOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-app
        path: NdcApp/bin/Release/net8.0-ios/**/*.app

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-windows, build-android, build-ios]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          windows-msix/**/*
          android-apk/**/*
          ios-app/**/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}